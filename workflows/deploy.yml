name: Deploy to EC2

on:
  push:
    branches:
      - master  # Este paso se ejecutará cuando haya un push a la rama 'main'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest  # Se ejecuta en una máquina virtual con Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Este paso descarga el código fuente del repositorio.

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Habilita la acción Buildx para construir imágenes Docker de manera avanzada.

    - name: Cache Docker layers
      uses: actions/cache@v2  # Caching de capas Docker para acelerar las construcciones posteriores.
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      run: |
        docker build -t auth-ms-prod -f auth-ms/Dockerfile.prod .  # Construye la imagen Docker de producción usando el Dockerfile.

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.5  # Esta acción se conecta a tu EC2 y ejecuta comandos a través de SSH.
      with:
        host: ${{ secrets.EC2_HOST }}  # Utiliza el secreto EC2_HOST
        username: ${{ secrets.EC2_USER }}  # Utiliza el secreto EC2_USER
        key: ${{ secrets.EC2_PRIVATE_KEY }}  # Utiliza el secreto EC2_PRIVATE_KEY
        script: |
          cd /path/to/your/app  # Navega al directorio donde se encuentra tu aplicación en EC2.
          docker-compose down  # Detiene cualquier contenedor Docker que se esté ejecutando.
          docker-compose up -d  # Vuelve a levantar los contenedores en segundo plano.
